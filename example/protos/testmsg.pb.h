// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testmsg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_testmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_testmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_testmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_testmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_testmsg_2eproto;
class TestMessageA;
class TestMessageADefaultTypeInternal;
extern TestMessageADefaultTypeInternal _TestMessageA_default_instance_;
class TestMessageB;
class TestMessageBDefaultTypeInternal;
extern TestMessageBDefaultTypeInternal _TestMessageB_default_instance_;
class TestMessageB_ReqData;
class TestMessageB_ReqDataDefaultTypeInternal;
extern TestMessageB_ReqDataDefaultTypeInternal _TestMessageB_ReqData_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::TestMessageA* Arena::CreateMaybeMessage<::TestMessageA>(Arena*);
template<> ::TestMessageB* Arena::CreateMaybeMessage<::TestMessageB>(Arena*);
template<> ::TestMessageB_ReqData* Arena::CreateMaybeMessage<::TestMessageB_ReqData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum TestMessageB_MT : int {
  TestMessageB_MT_REQ = 0,
  TestMessageB_MT_RSP = 1,
  TestMessageB_MT_NTY = 2,
  TestMessageB_MT_TestMessageB_MT_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  TestMessageB_MT_TestMessageB_MT_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool TestMessageB_MT_IsValid(int value);
constexpr TestMessageB_MT TestMessageB_MT_MT_MIN = TestMessageB_MT_REQ;
constexpr TestMessageB_MT TestMessageB_MT_MT_MAX = TestMessageB_MT_NTY;
constexpr int TestMessageB_MT_MT_ARRAYSIZE = TestMessageB_MT_MT_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TestMessageB_MT_descriptor();
template<typename T>
inline const std::string& TestMessageB_MT_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TestMessageB_MT>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TestMessageB_MT_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TestMessageB_MT_descriptor(), enum_t_value);
}
inline bool TestMessageB_MT_Parse(
    const std::string& name, TestMessageB_MT* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TestMessageB_MT>(
    TestMessageB_MT_descriptor(), name, value);
}
// ===================================================================

class TestMessageA :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TestMessageA) */ {
 public:
  TestMessageA();
  virtual ~TestMessageA();

  TestMessageA(const TestMessageA& from);
  TestMessageA(TestMessageA&& from) noexcept
    : TestMessageA() {
    *this = ::std::move(from);
  }

  inline TestMessageA& operator=(const TestMessageA& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageA& operator=(TestMessageA&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestMessageA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessageA* internal_default_instance() {
    return reinterpret_cast<const TestMessageA*>(
               &_TestMessageA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TestMessageA& a, TestMessageA& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageA* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestMessageA* New() const final {
    return CreateMaybeMessage<TestMessageA>(nullptr);
  }

  TestMessageA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestMessageA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestMessageA& from);
  void MergeFrom(const TestMessageA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessageA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TestMessageA";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_testmsg_2eproto);
    return ::descriptor_table_testmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 4,
    kPriceFieldNumber = 1,
    kSeqFieldNumber = 3,
    kIdFieldNumber = 2,
  };
  // string name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // double price = 1;
  void clear_price();
  double price() const;
  void set_price(double value);
  private:
  double _internal_price() const;
  void _internal_set_price(double value);
  public:

  // uint64 seq = 3;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint64 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TestMessageA)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  double price_;
  ::PROTOBUF_NAMESPACE_ID::uint64 seq_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_testmsg_2eproto;
};
// -------------------------------------------------------------------

class TestMessageB_ReqData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TestMessageB.ReqData) */ {
 public:
  TestMessageB_ReqData();
  virtual ~TestMessageB_ReqData();

  TestMessageB_ReqData(const TestMessageB_ReqData& from);
  TestMessageB_ReqData(TestMessageB_ReqData&& from) noexcept
    : TestMessageB_ReqData() {
    *this = ::std::move(from);
  }

  inline TestMessageB_ReqData& operator=(const TestMessageB_ReqData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageB_ReqData& operator=(TestMessageB_ReqData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestMessageB_ReqData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessageB_ReqData* internal_default_instance() {
    return reinterpret_cast<const TestMessageB_ReqData*>(
               &_TestMessageB_ReqData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TestMessageB_ReqData& a, TestMessageB_ReqData& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageB_ReqData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestMessageB_ReqData* New() const final {
    return CreateMaybeMessage<TestMessageB_ReqData>(nullptr);
  }

  TestMessageB_ReqData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestMessageB_ReqData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestMessageB_ReqData& from);
  void MergeFrom(const TestMessageB_ReqData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessageB_ReqData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TestMessageB.ReqData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_testmsg_2eproto);
    return ::descriptor_table_testmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kSeqFieldNumber = 2,
    kTidFieldNumber = 1,
  };
  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 seq = 2;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint64 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 tid = 1;
  void clear_tid();
  ::PROTOBUF_NAMESPACE_ID::int32 tid() const;
  void set_tid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tid() const;
  void _internal_set_tid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TestMessageB.ReqData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 seq_;
  ::PROTOBUF_NAMESPACE_ID::int32 tid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_testmsg_2eproto;
};
// -------------------------------------------------------------------

class TestMessageB :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TestMessageB) */ {
 public:
  TestMessageB();
  virtual ~TestMessageB();

  TestMessageB(const TestMessageB& from);
  TestMessageB(TestMessageB&& from) noexcept
    : TestMessageB() {
    *this = ::std::move(from);
  }

  inline TestMessageB& operator=(const TestMessageB& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageB& operator=(TestMessageB&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestMessageB& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessageB* internal_default_instance() {
    return reinterpret_cast<const TestMessageB*>(
               &_TestMessageB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TestMessageB& a, TestMessageB& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageB* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestMessageB* New() const final {
    return CreateMaybeMessage<TestMessageB>(nullptr);
  }

  TestMessageB* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestMessageB>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestMessageB& from);
  void MergeFrom(const TestMessageB& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessageB* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TestMessageB";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_testmsg_2eproto);
    return ::descriptor_table_testmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef TestMessageB_ReqData ReqData;

  typedef TestMessageB_MT MT;
  static constexpr MT REQ =
    TestMessageB_MT_REQ;
  static constexpr MT RSP =
    TestMessageB_MT_RSP;
  static constexpr MT NTY =
    TestMessageB_MT_NTY;
  static inline bool MT_IsValid(int value) {
    return TestMessageB_MT_IsValid(value);
  }
  static constexpr MT MT_MIN =
    TestMessageB_MT_MT_MIN;
  static constexpr MT MT_MAX =
    TestMessageB_MT_MT_MAX;
  static constexpr int MT_ARRAYSIZE =
    TestMessageB_MT_MT_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MT_descriptor() {
    return TestMessageB_MT_descriptor();
  }
  template<typename T>
  static inline const std::string& MT_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MT>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MT_Name.");
    return TestMessageB_MT_Name(enum_t_value);
  }
  static inline bool MT_Parse(const std::string& name,
      MT* value) {
    return TestMessageB_MT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kDoublerepeatedDataFieldNumber = 18,
    kFloatrepeatedDataFieldNumber = 19,
    kInt64RepeatedDataFieldNumber = 20,
    kUint64RepeatedDataFieldNumber = 21,
    kInt32RepeatedDataFieldNumber = 22,
    kFixed64RepeatedDataFieldNumber = 23,
    kFixed32RepeatedDataFieldNumber = 24,
    kBoolrepeatedDataFieldNumber = 25,
    kStringrepeatedDataFieldNumber = 26,
    kBytesrepeatedDataFieldNumber = 27,
    kEnumrepeatedDataFieldNumber = 28,
    kUint32RepeatedDataFieldNumber = 29,
    kSfixed32RepeatedDataFieldNumber = 30,
    kSfixed64RepeatedDataFieldNumber = 31,
    kSint32RepeatedDataFieldNumber = 32,
    kSint64RepeatedDataFieldNumber = 33,
    kMsgrepeatedDataFieldNumber = 34,
    kStringDataFieldNumber = 9,
    kBytesDataFieldNumber = 10,
    kMsgDataFieldNumber = 17,
    kDoubleDataFieldNumber = 1,
    kInt64DataFieldNumber = 3,
    kFloatDataFieldNumber = 2,
    kInt32DataFieldNumber = 5,
    kUint64DataFieldNumber = 4,
    kFixed64DataFieldNumber = 6,
    kFixed32DataFieldNumber = 7,
    kBoolDataFieldNumber = 8,
    kEnumDataFieldNumber = 11,
    kUint32DataFieldNumber = 12,
    kSfixed64DataFieldNumber = 14,
    kSfixed32DataFieldNumber = 13,
    kSint32DataFieldNumber = 15,
    kSint64DataFieldNumber = 16,
  };
  // repeated double doublerepeatedData = 18;
  int doublerepeateddata_size() const;
  private:
  int _internal_doublerepeateddata_size() const;
  public:
  void clear_doublerepeateddata();
  private:
  double _internal_doublerepeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_doublerepeateddata() const;
  void _internal_add_doublerepeateddata(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_doublerepeateddata();
  public:
  double doublerepeateddata(int index) const;
  void set_doublerepeateddata(int index, double value);
  void add_doublerepeateddata(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      doublerepeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_doublerepeateddata();

  // repeated float floatrepeatedData = 19;
  int floatrepeateddata_size() const;
  private:
  int _internal_floatrepeateddata_size() const;
  public:
  void clear_floatrepeateddata();
  private:
  float _internal_floatrepeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_floatrepeateddata() const;
  void _internal_add_floatrepeateddata(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_floatrepeateddata();
  public:
  float floatrepeateddata(int index) const;
  void set_floatrepeateddata(int index, float value);
  void add_floatrepeateddata(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      floatrepeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_floatrepeateddata();

  // repeated int64 int64repeatedData = 20;
  int int64repeateddata_size() const;
  private:
  int _internal_int64repeateddata_size() const;
  public:
  void clear_int64repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_int64repeateddata() const;
  void _internal_add_int64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_int64repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 int64repeateddata(int index) const;
  void set_int64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_int64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      int64repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_int64repeateddata();

  // repeated uint64 uint64repeatedData = 21;
  int uint64repeateddata_size() const;
  private:
  int _internal_uint64repeateddata_size() const;
  public:
  void clear_uint64repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uint64repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_uint64repeateddata() const;
  void _internal_add_uint64repeateddata(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_uint64repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 uint64repeateddata(int index) const;
  void set_uint64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_uint64repeateddata(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      uint64repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_uint64repeateddata();

  // repeated int32 int32repeatedData = 22;
  int int32repeateddata_size() const;
  private:
  int _internal_int32repeateddata_size() const;
  public:
  void clear_int32repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int32repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_int32repeateddata() const;
  void _internal_add_int32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_int32repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 int32repeateddata(int index) const;
  void set_int32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_int32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      int32repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_int32repeateddata();

  // repeated fixed64 fixed64repeatedData = 23;
  int fixed64repeateddata_size() const;
  private:
  int _internal_fixed64repeateddata_size() const;
  public:
  void clear_fixed64repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_fixed64repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_fixed64repeateddata() const;
  void _internal_add_fixed64repeateddata(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_fixed64repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 fixed64repeateddata(int index) const;
  void set_fixed64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_fixed64repeateddata(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      fixed64repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_fixed64repeateddata();

  // repeated fixed32 fixed32repeatedData = 24;
  int fixed32repeateddata_size() const;
  private:
  int _internal_fixed32repeateddata_size() const;
  public:
  void clear_fixed32repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fixed32repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_fixed32repeateddata() const;
  void _internal_add_fixed32repeateddata(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_fixed32repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 fixed32repeateddata(int index) const;
  void set_fixed32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_fixed32repeateddata(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      fixed32repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_fixed32repeateddata();

  // repeated bool boolrepeatedData = 25;
  int boolrepeateddata_size() const;
  private:
  int _internal_boolrepeateddata_size() const;
  public:
  void clear_boolrepeateddata();
  private:
  bool _internal_boolrepeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_boolrepeateddata() const;
  void _internal_add_boolrepeateddata(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_boolrepeateddata();
  public:
  bool boolrepeateddata(int index) const;
  void set_boolrepeateddata(int index, bool value);
  void add_boolrepeateddata(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      boolrepeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_boolrepeateddata();

  // repeated string stringrepeatedData = 26;
  int stringrepeateddata_size() const;
  private:
  int _internal_stringrepeateddata_size() const;
  public:
  void clear_stringrepeateddata();
  const std::string& stringrepeateddata(int index) const;
  std::string* mutable_stringrepeateddata(int index);
  void set_stringrepeateddata(int index, const std::string& value);
  void set_stringrepeateddata(int index, std::string&& value);
  void set_stringrepeateddata(int index, const char* value);
  void set_stringrepeateddata(int index, const char* value, size_t size);
  std::string* add_stringrepeateddata();
  void add_stringrepeateddata(const std::string& value);
  void add_stringrepeateddata(std::string&& value);
  void add_stringrepeateddata(const char* value);
  void add_stringrepeateddata(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& stringrepeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_stringrepeateddata();
  private:
  const std::string& _internal_stringrepeateddata(int index) const;
  std::string* _internal_add_stringrepeateddata();
  public:

  // repeated bytes bytesrepeatedData = 27;
  int bytesrepeateddata_size() const;
  private:
  int _internal_bytesrepeateddata_size() const;
  public:
  void clear_bytesrepeateddata();
  const std::string& bytesrepeateddata(int index) const;
  std::string* mutable_bytesrepeateddata(int index);
  void set_bytesrepeateddata(int index, const std::string& value);
  void set_bytesrepeateddata(int index, std::string&& value);
  void set_bytesrepeateddata(int index, const char* value);
  void set_bytesrepeateddata(int index, const void* value, size_t size);
  std::string* add_bytesrepeateddata();
  void add_bytesrepeateddata(const std::string& value);
  void add_bytesrepeateddata(std::string&& value);
  void add_bytesrepeateddata(const char* value);
  void add_bytesrepeateddata(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& bytesrepeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_bytesrepeateddata();
  private:
  const std::string& _internal_bytesrepeateddata(int index) const;
  std::string* _internal_add_bytesrepeateddata();
  public:

  // repeated .TestMessageB.MT enumrepeatedData = 28;
  int enumrepeateddata_size() const;
  private:
  int _internal_enumrepeateddata_size() const;
  public:
  void clear_enumrepeateddata();
  private:
  ::TestMessageB_MT _internal_enumrepeateddata(int index) const;
  void _internal_add_enumrepeateddata(::TestMessageB_MT value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_enumrepeateddata();
  public:
  ::TestMessageB_MT enumrepeateddata(int index) const;
  void set_enumrepeateddata(int index, ::TestMessageB_MT value);
  void add_enumrepeateddata(::TestMessageB_MT value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& enumrepeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_enumrepeateddata();

  // repeated uint32 uint32repeatedData = 29;
  int uint32repeateddata_size() const;
  private:
  int _internal_uint32repeateddata_size() const;
  public:
  void clear_uint32repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uint32repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_uint32repeateddata() const;
  void _internal_add_uint32repeateddata(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_uint32repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 uint32repeateddata(int index) const;
  void set_uint32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_uint32repeateddata(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      uint32repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_uint32repeateddata();

  // repeated sfixed32 sfixed32repeatedData = 30;
  int sfixed32repeateddata_size() const;
  private:
  int _internal_sfixed32repeateddata_size() const;
  public:
  void clear_sfixed32repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sfixed32repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_sfixed32repeateddata() const;
  void _internal_add_sfixed32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_sfixed32repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 sfixed32repeateddata(int index) const;
  void set_sfixed32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_sfixed32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      sfixed32repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_sfixed32repeateddata();

  // repeated sfixed64 sfixed64repeatedData = 31;
  int sfixed64repeateddata_size() const;
  private:
  int _internal_sfixed64repeateddata_size() const;
  public:
  void clear_sfixed64repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_sfixed64repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_sfixed64repeateddata() const;
  void _internal_add_sfixed64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_sfixed64repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 sfixed64repeateddata(int index) const;
  void set_sfixed64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_sfixed64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      sfixed64repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_sfixed64repeateddata();

  // repeated sint32 sint32repeatedData = 32;
  int sint32repeateddata_size() const;
  private:
  int _internal_sint32repeateddata_size() const;
  public:
  void clear_sint32repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sint32repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_sint32repeateddata() const;
  void _internal_add_sint32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_sint32repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 sint32repeateddata(int index) const;
  void set_sint32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_sint32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      sint32repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_sint32repeateddata();

  // repeated sint64 sint64repeatedData = 33;
  int sint64repeateddata_size() const;
  private:
  int _internal_sint64repeateddata_size() const;
  public:
  void clear_sint64repeateddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_sint64repeateddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_sint64repeateddata() const;
  void _internal_add_sint64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_sint64repeateddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 sint64repeateddata(int index) const;
  void set_sint64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_sint64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      sint64repeateddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_sint64repeateddata();

  // repeated .TestMessageB.ReqData msgrepeatedData = 34;
  int msgrepeateddata_size() const;
  private:
  int _internal_msgrepeateddata_size() const;
  public:
  void clear_msgrepeateddata();
  ::TestMessageB_ReqData* mutable_msgrepeateddata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TestMessageB_ReqData >*
      mutable_msgrepeateddata();
  private:
  const ::TestMessageB_ReqData& _internal_msgrepeateddata(int index) const;
  ::TestMessageB_ReqData* _internal_add_msgrepeateddata();
  public:
  const ::TestMessageB_ReqData& msgrepeateddata(int index) const;
  ::TestMessageB_ReqData* add_msgrepeateddata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TestMessageB_ReqData >&
      msgrepeateddata() const;

  // string stringData = 9;
  void clear_stringdata();
  const std::string& stringdata() const;
  void set_stringdata(const std::string& value);
  void set_stringdata(std::string&& value);
  void set_stringdata(const char* value);
  void set_stringdata(const char* value, size_t size);
  std::string* mutable_stringdata();
  std::string* release_stringdata();
  void set_allocated_stringdata(std::string* stringdata);
  private:
  const std::string& _internal_stringdata() const;
  void _internal_set_stringdata(const std::string& value);
  std::string* _internal_mutable_stringdata();
  public:

  // bytes bytesData = 10;
  void clear_bytesdata();
  const std::string& bytesdata() const;
  void set_bytesdata(const std::string& value);
  void set_bytesdata(std::string&& value);
  void set_bytesdata(const char* value);
  void set_bytesdata(const void* value, size_t size);
  std::string* mutable_bytesdata();
  std::string* release_bytesdata();
  void set_allocated_bytesdata(std::string* bytesdata);
  private:
  const std::string& _internal_bytesdata() const;
  void _internal_set_bytesdata(const std::string& value);
  std::string* _internal_mutable_bytesdata();
  public:

  // .TestMessageB.ReqData msgData = 17;
  bool has_msgdata() const;
  private:
  bool _internal_has_msgdata() const;
  public:
  void clear_msgdata();
  const ::TestMessageB_ReqData& msgdata() const;
  ::TestMessageB_ReqData* release_msgdata();
  ::TestMessageB_ReqData* mutable_msgdata();
  void set_allocated_msgdata(::TestMessageB_ReqData* msgdata);
  private:
  const ::TestMessageB_ReqData& _internal_msgdata() const;
  ::TestMessageB_ReqData* _internal_mutable_msgdata();
  public:

  // double doubleData = 1;
  void clear_doubledata();
  double doubledata() const;
  void set_doubledata(double value);
  private:
  double _internal_doubledata() const;
  void _internal_set_doubledata(double value);
  public:

  // int64 int64Data = 3;
  void clear_int64data();
  ::PROTOBUF_NAMESPACE_ID::int64 int64data() const;
  void set_int64data(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64data() const;
  void _internal_set_int64data(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // float floatData = 2;
  void clear_floatdata();
  float floatdata() const;
  void set_floatdata(float value);
  private:
  float _internal_floatdata() const;
  void _internal_set_floatdata(float value);
  public:

  // int32 int32Data = 5;
  void clear_int32data();
  ::PROTOBUF_NAMESPACE_ID::int32 int32data() const;
  void set_int32data(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int32data() const;
  void _internal_set_int32data(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 uint64Data = 4;
  void clear_uint64data();
  ::PROTOBUF_NAMESPACE_ID::uint64 uint64data() const;
  void set_uint64data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uint64data() const;
  void _internal_set_uint64data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed64 fixed64Data = 6;
  void clear_fixed64data();
  ::PROTOBUF_NAMESPACE_ID::uint64 fixed64data() const;
  void set_fixed64data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_fixed64data() const;
  void _internal_set_fixed64data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed32 fixed32Data = 7;
  void clear_fixed32data();
  ::PROTOBUF_NAMESPACE_ID::uint32 fixed32data() const;
  void set_fixed32data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fixed32data() const;
  void _internal_set_fixed32data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool boolData = 8;
  void clear_booldata();
  bool booldata() const;
  void set_booldata(bool value);
  private:
  bool _internal_booldata() const;
  void _internal_set_booldata(bool value);
  public:

  // .TestMessageB.MT enumData = 11;
  void clear_enumdata();
  ::TestMessageB_MT enumdata() const;
  void set_enumdata(::TestMessageB_MT value);
  private:
  ::TestMessageB_MT _internal_enumdata() const;
  void _internal_set_enumdata(::TestMessageB_MT value);
  public:

  // uint32 uint32Data = 12;
  void clear_uint32data();
  ::PROTOBUF_NAMESPACE_ID::uint32 uint32data() const;
  void set_uint32data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uint32data() const;
  void _internal_set_uint32data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // sfixed64 sfixed64Data = 14;
  void clear_sfixed64data();
  ::PROTOBUF_NAMESPACE_ID::int64 sfixed64data() const;
  void set_sfixed64data(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_sfixed64data() const;
  void _internal_set_sfixed64data(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // sfixed32 sfixed32Data = 13;
  void clear_sfixed32data();
  ::PROTOBUF_NAMESPACE_ID::int32 sfixed32data() const;
  void set_sfixed32data(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sfixed32data() const;
  void _internal_set_sfixed32data(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 sint32Data = 15;
  void clear_sint32data();
  ::PROTOBUF_NAMESPACE_ID::int32 sint32data() const;
  void set_sint32data(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sint32data() const;
  void _internal_set_sint32data(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint64 sint64Data = 16;
  void clear_sint64data();
  ::PROTOBUF_NAMESPACE_ID::int64 sint64data() const;
  void set_sint64data(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_sint64data() const;
  void _internal_set_sint64data(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:TestMessageB)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > doublerepeateddata_;
  mutable std::atomic<int> _doublerepeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > floatrepeateddata_;
  mutable std::atomic<int> _floatrepeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > int64repeateddata_;
  mutable std::atomic<int> _int64repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > uint64repeateddata_;
  mutable std::atomic<int> _uint64repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > int32repeateddata_;
  mutable std::atomic<int> _int32repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > fixed64repeateddata_;
  mutable std::atomic<int> _fixed64repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > fixed32repeateddata_;
  mutable std::atomic<int> _fixed32repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > boolrepeateddata_;
  mutable std::atomic<int> _boolrepeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> stringrepeateddata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> bytesrepeateddata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> enumrepeateddata_;
  mutable std::atomic<int> _enumrepeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > uint32repeateddata_;
  mutable std::atomic<int> _uint32repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > sfixed32repeateddata_;
  mutable std::atomic<int> _sfixed32repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > sfixed64repeateddata_;
  mutable std::atomic<int> _sfixed64repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > sint32repeateddata_;
  mutable std::atomic<int> _sint32repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > sint64repeateddata_;
  mutable std::atomic<int> _sint64repeateddata_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TestMessageB_ReqData > msgrepeateddata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringdata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytesdata_;
  ::TestMessageB_ReqData* msgdata_;
  double doubledata_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64data_;
  float floatdata_;
  ::PROTOBUF_NAMESPACE_ID::int32 int32data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uint64data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 fixed64data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fixed32data_;
  bool booldata_;
  int enumdata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uint32data_;
  ::PROTOBUF_NAMESPACE_ID::int64 sfixed64data_;
  ::PROTOBUF_NAMESPACE_ID::int32 sfixed32data_;
  ::PROTOBUF_NAMESPACE_ID::int32 sint32data_;
  ::PROTOBUF_NAMESPACE_ID::int64 sint64data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_testmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TestMessageA

// double price = 1;
inline void TestMessageA::clear_price() {
  price_ = 0;
}
inline double TestMessageA::_internal_price() const {
  return price_;
}
inline double TestMessageA::price() const {
  // @@protoc_insertion_point(field_get:TestMessageA.price)
  return _internal_price();
}
inline void TestMessageA::_internal_set_price(double value) {
  
  price_ = value;
}
inline void TestMessageA::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:TestMessageA.price)
}

// int32 id = 2;
inline void TestMessageA::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageA::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageA::id() const {
  // @@protoc_insertion_point(field_get:TestMessageA.id)
  return _internal_id();
}
inline void TestMessageA::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void TestMessageA::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:TestMessageA.id)
}

// uint64 seq = 3;
inline void TestMessageA::clear_seq() {
  seq_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageA::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageA::seq() const {
  // @@protoc_insertion_point(field_get:TestMessageA.seq)
  return _internal_seq();
}
inline void TestMessageA::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  seq_ = value;
}
inline void TestMessageA::set_seq(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:TestMessageA.seq)
}

// string name = 4;
inline void TestMessageA::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TestMessageA::name() const {
  // @@protoc_insertion_point(field_get:TestMessageA.name)
  return _internal_name();
}
inline void TestMessageA::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:TestMessageA.name)
}
inline std::string* TestMessageA::mutable_name() {
  // @@protoc_insertion_point(field_mutable:TestMessageA.name)
  return _internal_mutable_name();
}
inline const std::string& TestMessageA::_internal_name() const {
  return name_.GetNoArena();
}
inline void TestMessageA::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TestMessageA::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestMessageA.name)
}
inline void TestMessageA::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestMessageA.name)
}
inline void TestMessageA::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestMessageA.name)
}
inline std::string* TestMessageA::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TestMessageA::release_name() {
  // @@protoc_insertion_point(field_release:TestMessageA.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TestMessageA::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TestMessageA.name)
}

// -------------------------------------------------------------------

// TestMessageB_ReqData

// int32 tid = 1;
inline void TestMessageB_ReqData::clear_tid() {
  tid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB_ReqData::_internal_tid() const {
  return tid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB_ReqData::tid() const {
  // @@protoc_insertion_point(field_get:TestMessageB.ReqData.tid)
  return _internal_tid();
}
inline void TestMessageB_ReqData::_internal_set_tid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tid_ = value;
}
inline void TestMessageB_ReqData::set_tid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tid(value);
  // @@protoc_insertion_point(field_set:TestMessageB.ReqData.tid)
}

// uint64 seq = 2;
inline void TestMessageB_ReqData::clear_seq() {
  seq_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB_ReqData::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB_ReqData::seq() const {
  // @@protoc_insertion_point(field_get:TestMessageB.ReqData.seq)
  return _internal_seq();
}
inline void TestMessageB_ReqData::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  seq_ = value;
}
inline void TestMessageB_ReqData::set_seq(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:TestMessageB.ReqData.seq)
}

// string name = 3;
inline void TestMessageB_ReqData::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TestMessageB_ReqData::name() const {
  // @@protoc_insertion_point(field_get:TestMessageB.ReqData.name)
  return _internal_name();
}
inline void TestMessageB_ReqData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:TestMessageB.ReqData.name)
}
inline std::string* TestMessageB_ReqData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:TestMessageB.ReqData.name)
  return _internal_mutable_name();
}
inline const std::string& TestMessageB_ReqData::_internal_name() const {
  return name_.GetNoArena();
}
inline void TestMessageB_ReqData::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TestMessageB_ReqData::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestMessageB.ReqData.name)
}
inline void TestMessageB_ReqData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestMessageB.ReqData.name)
}
inline void TestMessageB_ReqData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestMessageB.ReqData.name)
}
inline std::string* TestMessageB_ReqData::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TestMessageB_ReqData::release_name() {
  // @@protoc_insertion_point(field_release:TestMessageB.ReqData.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TestMessageB_ReqData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TestMessageB.ReqData.name)
}

// -------------------------------------------------------------------

// TestMessageB

// double doubleData = 1;
inline void TestMessageB::clear_doubledata() {
  doubledata_ = 0;
}
inline double TestMessageB::_internal_doubledata() const {
  return doubledata_;
}
inline double TestMessageB::doubledata() const {
  // @@protoc_insertion_point(field_get:TestMessageB.doubleData)
  return _internal_doubledata();
}
inline void TestMessageB::_internal_set_doubledata(double value) {
  
  doubledata_ = value;
}
inline void TestMessageB::set_doubledata(double value) {
  _internal_set_doubledata(value);
  // @@protoc_insertion_point(field_set:TestMessageB.doubleData)
}

// float floatData = 2;
inline void TestMessageB::clear_floatdata() {
  floatdata_ = 0;
}
inline float TestMessageB::_internal_floatdata() const {
  return floatdata_;
}
inline float TestMessageB::floatdata() const {
  // @@protoc_insertion_point(field_get:TestMessageB.floatData)
  return _internal_floatdata();
}
inline void TestMessageB::_internal_set_floatdata(float value) {
  
  floatdata_ = value;
}
inline void TestMessageB::set_floatdata(float value) {
  _internal_set_floatdata(value);
  // @@protoc_insertion_point(field_set:TestMessageB.floatData)
}

// int64 int64Data = 3;
inline void TestMessageB::clear_int64data() {
  int64data_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::_internal_int64data() const {
  return int64data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::int64data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.int64Data)
  return _internal_int64data();
}
inline void TestMessageB::_internal_set_int64data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64data_ = value;
}
inline void TestMessageB::set_int64data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.int64Data)
}

// uint64 uint64Data = 4;
inline void TestMessageB::clear_uint64data() {
  uint64data_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB::_internal_uint64data() const {
  return uint64data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB::uint64data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.uint64Data)
  return _internal_uint64data();
}
inline void TestMessageB::_internal_set_uint64data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uint64data_ = value;
}
inline void TestMessageB::set_uint64data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uint64data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.uint64Data)
}

// int32 int32Data = 5;
inline void TestMessageB::clear_int32data() {
  int32data_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::_internal_int32data() const {
  return int32data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::int32data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.int32Data)
  return _internal_int32data();
}
inline void TestMessageB::_internal_set_int32data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  int32data_ = value;
}
inline void TestMessageB::set_int32data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int32data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.int32Data)
}

// fixed64 fixed64Data = 6;
inline void TestMessageB::clear_fixed64data() {
  fixed64data_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB::_internal_fixed64data() const {
  return fixed64data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB::fixed64data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.fixed64Data)
  return _internal_fixed64data();
}
inline void TestMessageB::_internal_set_fixed64data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  fixed64data_ = value;
}
inline void TestMessageB::set_fixed64data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_fixed64data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.fixed64Data)
}

// fixed32 fixed32Data = 7;
inline void TestMessageB::clear_fixed32data() {
  fixed32data_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TestMessageB::_internal_fixed32data() const {
  return fixed32data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TestMessageB::fixed32data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.fixed32Data)
  return _internal_fixed32data();
}
inline void TestMessageB::_internal_set_fixed32data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fixed32data_ = value;
}
inline void TestMessageB::set_fixed32data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fixed32data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.fixed32Data)
}

// bool boolData = 8;
inline void TestMessageB::clear_booldata() {
  booldata_ = false;
}
inline bool TestMessageB::_internal_booldata() const {
  return booldata_;
}
inline bool TestMessageB::booldata() const {
  // @@protoc_insertion_point(field_get:TestMessageB.boolData)
  return _internal_booldata();
}
inline void TestMessageB::_internal_set_booldata(bool value) {
  
  booldata_ = value;
}
inline void TestMessageB::set_booldata(bool value) {
  _internal_set_booldata(value);
  // @@protoc_insertion_point(field_set:TestMessageB.boolData)
}

// string stringData = 9;
inline void TestMessageB::clear_stringdata() {
  stringdata_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TestMessageB::stringdata() const {
  // @@protoc_insertion_point(field_get:TestMessageB.stringData)
  return _internal_stringdata();
}
inline void TestMessageB::set_stringdata(const std::string& value) {
  _internal_set_stringdata(value);
  // @@protoc_insertion_point(field_set:TestMessageB.stringData)
}
inline std::string* TestMessageB::mutable_stringdata() {
  // @@protoc_insertion_point(field_mutable:TestMessageB.stringData)
  return _internal_mutable_stringdata();
}
inline const std::string& TestMessageB::_internal_stringdata() const {
  return stringdata_.GetNoArena();
}
inline void TestMessageB::_internal_set_stringdata(const std::string& value) {
  
  stringdata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TestMessageB::set_stringdata(std::string&& value) {
  
  stringdata_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestMessageB.stringData)
}
inline void TestMessageB::set_stringdata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringdata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestMessageB.stringData)
}
inline void TestMessageB::set_stringdata(const char* value, size_t size) {
  
  stringdata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestMessageB.stringData)
}
inline std::string* TestMessageB::_internal_mutable_stringdata() {
  
  return stringdata_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TestMessageB::release_stringdata() {
  // @@protoc_insertion_point(field_release:TestMessageB.stringData)
  
  return stringdata_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TestMessageB::set_allocated_stringdata(std::string* stringdata) {
  if (stringdata != nullptr) {
    
  } else {
    
  }
  stringdata_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringdata);
  // @@protoc_insertion_point(field_set_allocated:TestMessageB.stringData)
}

// bytes bytesData = 10;
inline void TestMessageB::clear_bytesdata() {
  bytesdata_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TestMessageB::bytesdata() const {
  // @@protoc_insertion_point(field_get:TestMessageB.bytesData)
  return _internal_bytesdata();
}
inline void TestMessageB::set_bytesdata(const std::string& value) {
  _internal_set_bytesdata(value);
  // @@protoc_insertion_point(field_set:TestMessageB.bytesData)
}
inline std::string* TestMessageB::mutable_bytesdata() {
  // @@protoc_insertion_point(field_mutable:TestMessageB.bytesData)
  return _internal_mutable_bytesdata();
}
inline const std::string& TestMessageB::_internal_bytesdata() const {
  return bytesdata_.GetNoArena();
}
inline void TestMessageB::_internal_set_bytesdata(const std::string& value) {
  
  bytesdata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TestMessageB::set_bytesdata(std::string&& value) {
  
  bytesdata_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestMessageB.bytesData)
}
inline void TestMessageB::set_bytesdata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bytesdata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestMessageB.bytesData)
}
inline void TestMessageB::set_bytesdata(const void* value, size_t size) {
  
  bytesdata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestMessageB.bytesData)
}
inline std::string* TestMessageB::_internal_mutable_bytesdata() {
  
  return bytesdata_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TestMessageB::release_bytesdata() {
  // @@protoc_insertion_point(field_release:TestMessageB.bytesData)
  
  return bytesdata_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TestMessageB::set_allocated_bytesdata(std::string* bytesdata) {
  if (bytesdata != nullptr) {
    
  } else {
    
  }
  bytesdata_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bytesdata);
  // @@protoc_insertion_point(field_set_allocated:TestMessageB.bytesData)
}

// .TestMessageB.MT enumData = 11;
inline void TestMessageB::clear_enumdata() {
  enumdata_ = 0;
}
inline ::TestMessageB_MT TestMessageB::_internal_enumdata() const {
  return static_cast< ::TestMessageB_MT >(enumdata_);
}
inline ::TestMessageB_MT TestMessageB::enumdata() const {
  // @@protoc_insertion_point(field_get:TestMessageB.enumData)
  return _internal_enumdata();
}
inline void TestMessageB::_internal_set_enumdata(::TestMessageB_MT value) {
  
  enumdata_ = value;
}
inline void TestMessageB::set_enumdata(::TestMessageB_MT value) {
  _internal_set_enumdata(value);
  // @@protoc_insertion_point(field_set:TestMessageB.enumData)
}

// uint32 uint32Data = 12;
inline void TestMessageB::clear_uint32data() {
  uint32data_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TestMessageB::_internal_uint32data() const {
  return uint32data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TestMessageB::uint32data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.uint32Data)
  return _internal_uint32data();
}
inline void TestMessageB::_internal_set_uint32data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  uint32data_ = value;
}
inline void TestMessageB::set_uint32data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uint32data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.uint32Data)
}

// sfixed32 sfixed32Data = 13;
inline void TestMessageB::clear_sfixed32data() {
  sfixed32data_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::_internal_sfixed32data() const {
  return sfixed32data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::sfixed32data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.sfixed32Data)
  return _internal_sfixed32data();
}
inline void TestMessageB::_internal_set_sfixed32data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sfixed32data_ = value;
}
inline void TestMessageB::set_sfixed32data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sfixed32data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.sfixed32Data)
}

// sfixed64 sfixed64Data = 14;
inline void TestMessageB::clear_sfixed64data() {
  sfixed64data_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::_internal_sfixed64data() const {
  return sfixed64data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::sfixed64data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.sfixed64Data)
  return _internal_sfixed64data();
}
inline void TestMessageB::_internal_set_sfixed64data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sfixed64data_ = value;
}
inline void TestMessageB::set_sfixed64data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_sfixed64data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.sfixed64Data)
}

// sint32 sint32Data = 15;
inline void TestMessageB::clear_sint32data() {
  sint32data_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::_internal_sint32data() const {
  return sint32data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::sint32data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.sint32Data)
  return _internal_sint32data();
}
inline void TestMessageB::_internal_set_sint32data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sint32data_ = value;
}
inline void TestMessageB::set_sint32data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sint32data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.sint32Data)
}

// sint64 sint64Data = 16;
inline void TestMessageB::clear_sint64data() {
  sint64data_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::_internal_sint64data() const {
  return sint64data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::sint64data() const {
  // @@protoc_insertion_point(field_get:TestMessageB.sint64Data)
  return _internal_sint64data();
}
inline void TestMessageB::_internal_set_sint64data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sint64data_ = value;
}
inline void TestMessageB::set_sint64data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_sint64data(value);
  // @@protoc_insertion_point(field_set:TestMessageB.sint64Data)
}

// .TestMessageB.ReqData msgData = 17;
inline bool TestMessageB::_internal_has_msgdata() const {
  return this != internal_default_instance() && msgdata_ != nullptr;
}
inline bool TestMessageB::has_msgdata() const {
  return _internal_has_msgdata();
}
inline void TestMessageB::clear_msgdata() {
  if (GetArenaNoVirtual() == nullptr && msgdata_ != nullptr) {
    delete msgdata_;
  }
  msgdata_ = nullptr;
}
inline const ::TestMessageB_ReqData& TestMessageB::_internal_msgdata() const {
  const ::TestMessageB_ReqData* p = msgdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::TestMessageB_ReqData*>(
      &::_TestMessageB_ReqData_default_instance_);
}
inline const ::TestMessageB_ReqData& TestMessageB::msgdata() const {
  // @@protoc_insertion_point(field_get:TestMessageB.msgData)
  return _internal_msgdata();
}
inline ::TestMessageB_ReqData* TestMessageB::release_msgdata() {
  // @@protoc_insertion_point(field_release:TestMessageB.msgData)
  
  ::TestMessageB_ReqData* temp = msgdata_;
  msgdata_ = nullptr;
  return temp;
}
inline ::TestMessageB_ReqData* TestMessageB::_internal_mutable_msgdata() {
  
  if (msgdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::TestMessageB_ReqData>(GetArenaNoVirtual());
    msgdata_ = p;
  }
  return msgdata_;
}
inline ::TestMessageB_ReqData* TestMessageB::mutable_msgdata() {
  // @@protoc_insertion_point(field_mutable:TestMessageB.msgData)
  return _internal_mutable_msgdata();
}
inline void TestMessageB::set_allocated_msgdata(::TestMessageB_ReqData* msgdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete msgdata_;
  }
  if (msgdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      msgdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msgdata, submessage_arena);
    }
    
  } else {
    
  }
  msgdata_ = msgdata;
  // @@protoc_insertion_point(field_set_allocated:TestMessageB.msgData)
}

// repeated double doublerepeatedData = 18;
inline int TestMessageB::_internal_doublerepeateddata_size() const {
  return doublerepeateddata_.size();
}
inline int TestMessageB::doublerepeateddata_size() const {
  return _internal_doublerepeateddata_size();
}
inline void TestMessageB::clear_doublerepeateddata() {
  doublerepeateddata_.Clear();
}
inline double TestMessageB::_internal_doublerepeateddata(int index) const {
  return doublerepeateddata_.Get(index);
}
inline double TestMessageB::doublerepeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.doublerepeatedData)
  return _internal_doublerepeateddata(index);
}
inline void TestMessageB::set_doublerepeateddata(int index, double value) {
  doublerepeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.doublerepeatedData)
}
inline void TestMessageB::_internal_add_doublerepeateddata(double value) {
  doublerepeateddata_.Add(value);
}
inline void TestMessageB::add_doublerepeateddata(double value) {
  _internal_add_doublerepeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.doublerepeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TestMessageB::_internal_doublerepeateddata() const {
  return doublerepeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TestMessageB::doublerepeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.doublerepeatedData)
  return _internal_doublerepeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TestMessageB::_internal_mutable_doublerepeateddata() {
  return &doublerepeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TestMessageB::mutable_doublerepeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.doublerepeatedData)
  return _internal_mutable_doublerepeateddata();
}

// repeated float floatrepeatedData = 19;
inline int TestMessageB::_internal_floatrepeateddata_size() const {
  return floatrepeateddata_.size();
}
inline int TestMessageB::floatrepeateddata_size() const {
  return _internal_floatrepeateddata_size();
}
inline void TestMessageB::clear_floatrepeateddata() {
  floatrepeateddata_.Clear();
}
inline float TestMessageB::_internal_floatrepeateddata(int index) const {
  return floatrepeateddata_.Get(index);
}
inline float TestMessageB::floatrepeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.floatrepeatedData)
  return _internal_floatrepeateddata(index);
}
inline void TestMessageB::set_floatrepeateddata(int index, float value) {
  floatrepeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.floatrepeatedData)
}
inline void TestMessageB::_internal_add_floatrepeateddata(float value) {
  floatrepeateddata_.Add(value);
}
inline void TestMessageB::add_floatrepeateddata(float value) {
  _internal_add_floatrepeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.floatrepeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TestMessageB::_internal_floatrepeateddata() const {
  return floatrepeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TestMessageB::floatrepeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.floatrepeatedData)
  return _internal_floatrepeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TestMessageB::_internal_mutable_floatrepeateddata() {
  return &floatrepeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TestMessageB::mutable_floatrepeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.floatrepeatedData)
  return _internal_mutable_floatrepeateddata();
}

// repeated int64 int64repeatedData = 20;
inline int TestMessageB::_internal_int64repeateddata_size() const {
  return int64repeateddata_.size();
}
inline int TestMessageB::int64repeateddata_size() const {
  return _internal_int64repeateddata_size();
}
inline void TestMessageB::clear_int64repeateddata() {
  int64repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::_internal_int64repeateddata(int index) const {
  return int64repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::int64repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.int64repeatedData)
  return _internal_int64repeateddata(index);
}
inline void TestMessageB::set_int64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  int64repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.int64repeatedData)
}
inline void TestMessageB::_internal_add_int64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value) {
  int64repeateddata_.Add(value);
}
inline void TestMessageB::add_int64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_int64repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.int64repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
TestMessageB::_internal_int64repeateddata() const {
  return int64repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
TestMessageB::int64repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.int64repeatedData)
  return _internal_int64repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
TestMessageB::_internal_mutable_int64repeateddata() {
  return &int64repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
TestMessageB::mutable_int64repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.int64repeatedData)
  return _internal_mutable_int64repeateddata();
}

// repeated uint64 uint64repeatedData = 21;
inline int TestMessageB::_internal_uint64repeateddata_size() const {
  return uint64repeateddata_.size();
}
inline int TestMessageB::uint64repeateddata_size() const {
  return _internal_uint64repeateddata_size();
}
inline void TestMessageB::clear_uint64repeateddata() {
  uint64repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB::_internal_uint64repeateddata(int index) const {
  return uint64repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB::uint64repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.uint64repeatedData)
  return _internal_uint64repeateddata(index);
}
inline void TestMessageB::set_uint64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  uint64repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.uint64repeatedData)
}
inline void TestMessageB::_internal_add_uint64repeateddata(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  uint64repeateddata_.Add(value);
}
inline void TestMessageB::add_uint64repeateddata(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_uint64repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.uint64repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
TestMessageB::_internal_uint64repeateddata() const {
  return uint64repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
TestMessageB::uint64repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.uint64repeatedData)
  return _internal_uint64repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
TestMessageB::_internal_mutable_uint64repeateddata() {
  return &uint64repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
TestMessageB::mutable_uint64repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.uint64repeatedData)
  return _internal_mutable_uint64repeateddata();
}

// repeated int32 int32repeatedData = 22;
inline int TestMessageB::_internal_int32repeateddata_size() const {
  return int32repeateddata_.size();
}
inline int TestMessageB::int32repeateddata_size() const {
  return _internal_int32repeateddata_size();
}
inline void TestMessageB::clear_int32repeateddata() {
  int32repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::_internal_int32repeateddata(int index) const {
  return int32repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::int32repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.int32repeatedData)
  return _internal_int32repeateddata(index);
}
inline void TestMessageB::set_int32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  int32repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.int32repeatedData)
}
inline void TestMessageB::_internal_add_int32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value) {
  int32repeateddata_.Add(value);
}
inline void TestMessageB::add_int32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_int32repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.int32repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TestMessageB::_internal_int32repeateddata() const {
  return int32repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TestMessageB::int32repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.int32repeatedData)
  return _internal_int32repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TestMessageB::_internal_mutable_int32repeateddata() {
  return &int32repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TestMessageB::mutable_int32repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.int32repeatedData)
  return _internal_mutable_int32repeateddata();
}

// repeated fixed64 fixed64repeatedData = 23;
inline int TestMessageB::_internal_fixed64repeateddata_size() const {
  return fixed64repeateddata_.size();
}
inline int TestMessageB::fixed64repeateddata_size() const {
  return _internal_fixed64repeateddata_size();
}
inline void TestMessageB::clear_fixed64repeateddata() {
  fixed64repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB::_internal_fixed64repeateddata(int index) const {
  return fixed64repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TestMessageB::fixed64repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.fixed64repeatedData)
  return _internal_fixed64repeateddata(index);
}
inline void TestMessageB::set_fixed64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  fixed64repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.fixed64repeatedData)
}
inline void TestMessageB::_internal_add_fixed64repeateddata(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  fixed64repeateddata_.Add(value);
}
inline void TestMessageB::add_fixed64repeateddata(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_fixed64repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.fixed64repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
TestMessageB::_internal_fixed64repeateddata() const {
  return fixed64repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
TestMessageB::fixed64repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.fixed64repeatedData)
  return _internal_fixed64repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
TestMessageB::_internal_mutable_fixed64repeateddata() {
  return &fixed64repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
TestMessageB::mutable_fixed64repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.fixed64repeatedData)
  return _internal_mutable_fixed64repeateddata();
}

// repeated fixed32 fixed32repeatedData = 24;
inline int TestMessageB::_internal_fixed32repeateddata_size() const {
  return fixed32repeateddata_.size();
}
inline int TestMessageB::fixed32repeateddata_size() const {
  return _internal_fixed32repeateddata_size();
}
inline void TestMessageB::clear_fixed32repeateddata() {
  fixed32repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TestMessageB::_internal_fixed32repeateddata(int index) const {
  return fixed32repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TestMessageB::fixed32repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.fixed32repeatedData)
  return _internal_fixed32repeateddata(index);
}
inline void TestMessageB::set_fixed32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  fixed32repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.fixed32repeatedData)
}
inline void TestMessageB::_internal_add_fixed32repeateddata(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  fixed32repeateddata_.Add(value);
}
inline void TestMessageB::add_fixed32repeateddata(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_fixed32repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.fixed32repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
TestMessageB::_internal_fixed32repeateddata() const {
  return fixed32repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
TestMessageB::fixed32repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.fixed32repeatedData)
  return _internal_fixed32repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
TestMessageB::_internal_mutable_fixed32repeateddata() {
  return &fixed32repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
TestMessageB::mutable_fixed32repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.fixed32repeatedData)
  return _internal_mutable_fixed32repeateddata();
}

// repeated bool boolrepeatedData = 25;
inline int TestMessageB::_internal_boolrepeateddata_size() const {
  return boolrepeateddata_.size();
}
inline int TestMessageB::boolrepeateddata_size() const {
  return _internal_boolrepeateddata_size();
}
inline void TestMessageB::clear_boolrepeateddata() {
  boolrepeateddata_.Clear();
}
inline bool TestMessageB::_internal_boolrepeateddata(int index) const {
  return boolrepeateddata_.Get(index);
}
inline bool TestMessageB::boolrepeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.boolrepeatedData)
  return _internal_boolrepeateddata(index);
}
inline void TestMessageB::set_boolrepeateddata(int index, bool value) {
  boolrepeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.boolrepeatedData)
}
inline void TestMessageB::_internal_add_boolrepeateddata(bool value) {
  boolrepeateddata_.Add(value);
}
inline void TestMessageB::add_boolrepeateddata(bool value) {
  _internal_add_boolrepeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.boolrepeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TestMessageB::_internal_boolrepeateddata() const {
  return boolrepeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TestMessageB::boolrepeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.boolrepeatedData)
  return _internal_boolrepeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TestMessageB::_internal_mutable_boolrepeateddata() {
  return &boolrepeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TestMessageB::mutable_boolrepeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.boolrepeatedData)
  return _internal_mutable_boolrepeateddata();
}

// repeated string stringrepeatedData = 26;
inline int TestMessageB::_internal_stringrepeateddata_size() const {
  return stringrepeateddata_.size();
}
inline int TestMessageB::stringrepeateddata_size() const {
  return _internal_stringrepeateddata_size();
}
inline void TestMessageB::clear_stringrepeateddata() {
  stringrepeateddata_.Clear();
}
inline std::string* TestMessageB::add_stringrepeateddata() {
  // @@protoc_insertion_point(field_add_mutable:TestMessageB.stringrepeatedData)
  return _internal_add_stringrepeateddata();
}
inline const std::string& TestMessageB::_internal_stringrepeateddata(int index) const {
  return stringrepeateddata_.Get(index);
}
inline const std::string& TestMessageB::stringrepeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.stringrepeatedData)
  return _internal_stringrepeateddata(index);
}
inline std::string* TestMessageB::mutable_stringrepeateddata(int index) {
  // @@protoc_insertion_point(field_mutable:TestMessageB.stringrepeatedData)
  return stringrepeateddata_.Mutable(index);
}
inline void TestMessageB::set_stringrepeateddata(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:TestMessageB.stringrepeatedData)
  stringrepeateddata_.Mutable(index)->assign(value);
}
inline void TestMessageB::set_stringrepeateddata(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:TestMessageB.stringrepeatedData)
  stringrepeateddata_.Mutable(index)->assign(std::move(value));
}
inline void TestMessageB::set_stringrepeateddata(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  stringrepeateddata_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TestMessageB.stringrepeatedData)
}
inline void TestMessageB::set_stringrepeateddata(int index, const char* value, size_t size) {
  stringrepeateddata_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TestMessageB.stringrepeatedData)
}
inline std::string* TestMessageB::_internal_add_stringrepeateddata() {
  return stringrepeateddata_.Add();
}
inline void TestMessageB::add_stringrepeateddata(const std::string& value) {
  stringrepeateddata_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TestMessageB.stringrepeatedData)
}
inline void TestMessageB::add_stringrepeateddata(std::string&& value) {
  stringrepeateddata_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:TestMessageB.stringrepeatedData)
}
inline void TestMessageB::add_stringrepeateddata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  stringrepeateddata_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TestMessageB.stringrepeatedData)
}
inline void TestMessageB::add_stringrepeateddata(const char* value, size_t size) {
  stringrepeateddata_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TestMessageB.stringrepeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
TestMessageB::stringrepeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.stringrepeatedData)
  return stringrepeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
TestMessageB::mutable_stringrepeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.stringrepeatedData)
  return &stringrepeateddata_;
}

// repeated bytes bytesrepeatedData = 27;
inline int TestMessageB::_internal_bytesrepeateddata_size() const {
  return bytesrepeateddata_.size();
}
inline int TestMessageB::bytesrepeateddata_size() const {
  return _internal_bytesrepeateddata_size();
}
inline void TestMessageB::clear_bytesrepeateddata() {
  bytesrepeateddata_.Clear();
}
inline std::string* TestMessageB::add_bytesrepeateddata() {
  // @@protoc_insertion_point(field_add_mutable:TestMessageB.bytesrepeatedData)
  return _internal_add_bytesrepeateddata();
}
inline const std::string& TestMessageB::_internal_bytesrepeateddata(int index) const {
  return bytesrepeateddata_.Get(index);
}
inline const std::string& TestMessageB::bytesrepeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.bytesrepeatedData)
  return _internal_bytesrepeateddata(index);
}
inline std::string* TestMessageB::mutable_bytesrepeateddata(int index) {
  // @@protoc_insertion_point(field_mutable:TestMessageB.bytesrepeatedData)
  return bytesrepeateddata_.Mutable(index);
}
inline void TestMessageB::set_bytesrepeateddata(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:TestMessageB.bytesrepeatedData)
  bytesrepeateddata_.Mutable(index)->assign(value);
}
inline void TestMessageB::set_bytesrepeateddata(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:TestMessageB.bytesrepeatedData)
  bytesrepeateddata_.Mutable(index)->assign(std::move(value));
}
inline void TestMessageB::set_bytesrepeateddata(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  bytesrepeateddata_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TestMessageB.bytesrepeatedData)
}
inline void TestMessageB::set_bytesrepeateddata(int index, const void* value, size_t size) {
  bytesrepeateddata_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TestMessageB.bytesrepeatedData)
}
inline std::string* TestMessageB::_internal_add_bytesrepeateddata() {
  return bytesrepeateddata_.Add();
}
inline void TestMessageB::add_bytesrepeateddata(const std::string& value) {
  bytesrepeateddata_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TestMessageB.bytesrepeatedData)
}
inline void TestMessageB::add_bytesrepeateddata(std::string&& value) {
  bytesrepeateddata_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:TestMessageB.bytesrepeatedData)
}
inline void TestMessageB::add_bytesrepeateddata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  bytesrepeateddata_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TestMessageB.bytesrepeatedData)
}
inline void TestMessageB::add_bytesrepeateddata(const void* value, size_t size) {
  bytesrepeateddata_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TestMessageB.bytesrepeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
TestMessageB::bytesrepeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.bytesrepeatedData)
  return bytesrepeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
TestMessageB::mutable_bytesrepeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.bytesrepeatedData)
  return &bytesrepeateddata_;
}

// repeated .TestMessageB.MT enumrepeatedData = 28;
inline int TestMessageB::_internal_enumrepeateddata_size() const {
  return enumrepeateddata_.size();
}
inline int TestMessageB::enumrepeateddata_size() const {
  return _internal_enumrepeateddata_size();
}
inline void TestMessageB::clear_enumrepeateddata() {
  enumrepeateddata_.Clear();
}
inline ::TestMessageB_MT TestMessageB::_internal_enumrepeateddata(int index) const {
  return static_cast< ::TestMessageB_MT >(enumrepeateddata_.Get(index));
}
inline ::TestMessageB_MT TestMessageB::enumrepeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.enumrepeatedData)
  return _internal_enumrepeateddata(index);
}
inline void TestMessageB::set_enumrepeateddata(int index, ::TestMessageB_MT value) {
  enumrepeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.enumrepeatedData)
}
inline void TestMessageB::_internal_add_enumrepeateddata(::TestMessageB_MT value) {
  enumrepeateddata_.Add(value);
}
inline void TestMessageB::add_enumrepeateddata(::TestMessageB_MT value) {
  // @@protoc_insertion_point(field_add:TestMessageB.enumrepeatedData)
  _internal_add_enumrepeateddata(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
TestMessageB::enumrepeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.enumrepeatedData)
  return enumrepeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestMessageB::_internal_mutable_enumrepeateddata() {
  return &enumrepeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestMessageB::mutable_enumrepeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.enumrepeatedData)
  return _internal_mutable_enumrepeateddata();
}

// repeated uint32 uint32repeatedData = 29;
inline int TestMessageB::_internal_uint32repeateddata_size() const {
  return uint32repeateddata_.size();
}
inline int TestMessageB::uint32repeateddata_size() const {
  return _internal_uint32repeateddata_size();
}
inline void TestMessageB::clear_uint32repeateddata() {
  uint32repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TestMessageB::_internal_uint32repeateddata(int index) const {
  return uint32repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TestMessageB::uint32repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.uint32repeatedData)
  return _internal_uint32repeateddata(index);
}
inline void TestMessageB::set_uint32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  uint32repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.uint32repeatedData)
}
inline void TestMessageB::_internal_add_uint32repeateddata(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  uint32repeateddata_.Add(value);
}
inline void TestMessageB::add_uint32repeateddata(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_uint32repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.uint32repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
TestMessageB::_internal_uint32repeateddata() const {
  return uint32repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
TestMessageB::uint32repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.uint32repeatedData)
  return _internal_uint32repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
TestMessageB::_internal_mutable_uint32repeateddata() {
  return &uint32repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
TestMessageB::mutable_uint32repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.uint32repeatedData)
  return _internal_mutable_uint32repeateddata();
}

// repeated sfixed32 sfixed32repeatedData = 30;
inline int TestMessageB::_internal_sfixed32repeateddata_size() const {
  return sfixed32repeateddata_.size();
}
inline int TestMessageB::sfixed32repeateddata_size() const {
  return _internal_sfixed32repeateddata_size();
}
inline void TestMessageB::clear_sfixed32repeateddata() {
  sfixed32repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::_internal_sfixed32repeateddata(int index) const {
  return sfixed32repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::sfixed32repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.sfixed32repeatedData)
  return _internal_sfixed32repeateddata(index);
}
inline void TestMessageB::set_sfixed32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  sfixed32repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.sfixed32repeatedData)
}
inline void TestMessageB::_internal_add_sfixed32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value) {
  sfixed32repeateddata_.Add(value);
}
inline void TestMessageB::add_sfixed32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_sfixed32repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.sfixed32repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TestMessageB::_internal_sfixed32repeateddata() const {
  return sfixed32repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TestMessageB::sfixed32repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.sfixed32repeatedData)
  return _internal_sfixed32repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TestMessageB::_internal_mutable_sfixed32repeateddata() {
  return &sfixed32repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TestMessageB::mutable_sfixed32repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.sfixed32repeatedData)
  return _internal_mutable_sfixed32repeateddata();
}

// repeated sfixed64 sfixed64repeatedData = 31;
inline int TestMessageB::_internal_sfixed64repeateddata_size() const {
  return sfixed64repeateddata_.size();
}
inline int TestMessageB::sfixed64repeateddata_size() const {
  return _internal_sfixed64repeateddata_size();
}
inline void TestMessageB::clear_sfixed64repeateddata() {
  sfixed64repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::_internal_sfixed64repeateddata(int index) const {
  return sfixed64repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::sfixed64repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.sfixed64repeatedData)
  return _internal_sfixed64repeateddata(index);
}
inline void TestMessageB::set_sfixed64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  sfixed64repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.sfixed64repeatedData)
}
inline void TestMessageB::_internal_add_sfixed64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value) {
  sfixed64repeateddata_.Add(value);
}
inline void TestMessageB::add_sfixed64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_sfixed64repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.sfixed64repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
TestMessageB::_internal_sfixed64repeateddata() const {
  return sfixed64repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
TestMessageB::sfixed64repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.sfixed64repeatedData)
  return _internal_sfixed64repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
TestMessageB::_internal_mutable_sfixed64repeateddata() {
  return &sfixed64repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
TestMessageB::mutable_sfixed64repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.sfixed64repeatedData)
  return _internal_mutable_sfixed64repeateddata();
}

// repeated sint32 sint32repeatedData = 32;
inline int TestMessageB::_internal_sint32repeateddata_size() const {
  return sint32repeateddata_.size();
}
inline int TestMessageB::sint32repeateddata_size() const {
  return _internal_sint32repeateddata_size();
}
inline void TestMessageB::clear_sint32repeateddata() {
  sint32repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::_internal_sint32repeateddata(int index) const {
  return sint32repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageB::sint32repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.sint32repeatedData)
  return _internal_sint32repeateddata(index);
}
inline void TestMessageB::set_sint32repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  sint32repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.sint32repeatedData)
}
inline void TestMessageB::_internal_add_sint32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value) {
  sint32repeateddata_.Add(value);
}
inline void TestMessageB::add_sint32repeateddata(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_sint32repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.sint32repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TestMessageB::_internal_sint32repeateddata() const {
  return sint32repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TestMessageB::sint32repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.sint32repeatedData)
  return _internal_sint32repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TestMessageB::_internal_mutable_sint32repeateddata() {
  return &sint32repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TestMessageB::mutable_sint32repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.sint32repeatedData)
  return _internal_mutable_sint32repeateddata();
}

// repeated sint64 sint64repeatedData = 33;
inline int TestMessageB::_internal_sint64repeateddata_size() const {
  return sint64repeateddata_.size();
}
inline int TestMessageB::sint64repeateddata_size() const {
  return _internal_sint64repeateddata_size();
}
inline void TestMessageB::clear_sint64repeateddata() {
  sint64repeateddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::_internal_sint64repeateddata(int index) const {
  return sint64repeateddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TestMessageB::sint64repeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.sint64repeatedData)
  return _internal_sint64repeateddata(index);
}
inline void TestMessageB::set_sint64repeateddata(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  sint64repeateddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMessageB.sint64repeatedData)
}
inline void TestMessageB::_internal_add_sint64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value) {
  sint64repeateddata_.Add(value);
}
inline void TestMessageB::add_sint64repeateddata(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_sint64repeateddata(value);
  // @@protoc_insertion_point(field_add:TestMessageB.sint64repeatedData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
TestMessageB::_internal_sint64repeateddata() const {
  return sint64repeateddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
TestMessageB::sint64repeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.sint64repeatedData)
  return _internal_sint64repeateddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
TestMessageB::_internal_mutable_sint64repeateddata() {
  return &sint64repeateddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
TestMessageB::mutable_sint64repeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.sint64repeatedData)
  return _internal_mutable_sint64repeateddata();
}

// repeated .TestMessageB.ReqData msgrepeatedData = 34;
inline int TestMessageB::_internal_msgrepeateddata_size() const {
  return msgrepeateddata_.size();
}
inline int TestMessageB::msgrepeateddata_size() const {
  return _internal_msgrepeateddata_size();
}
inline void TestMessageB::clear_msgrepeateddata() {
  msgrepeateddata_.Clear();
}
inline ::TestMessageB_ReqData* TestMessageB::mutable_msgrepeateddata(int index) {
  // @@protoc_insertion_point(field_mutable:TestMessageB.msgrepeatedData)
  return msgrepeateddata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TestMessageB_ReqData >*
TestMessageB::mutable_msgrepeateddata() {
  // @@protoc_insertion_point(field_mutable_list:TestMessageB.msgrepeatedData)
  return &msgrepeateddata_;
}
inline const ::TestMessageB_ReqData& TestMessageB::_internal_msgrepeateddata(int index) const {
  return msgrepeateddata_.Get(index);
}
inline const ::TestMessageB_ReqData& TestMessageB::msgrepeateddata(int index) const {
  // @@protoc_insertion_point(field_get:TestMessageB.msgrepeatedData)
  return _internal_msgrepeateddata(index);
}
inline ::TestMessageB_ReqData* TestMessageB::_internal_add_msgrepeateddata() {
  return msgrepeateddata_.Add();
}
inline ::TestMessageB_ReqData* TestMessageB::add_msgrepeateddata() {
  // @@protoc_insertion_point(field_add:TestMessageB.msgrepeatedData)
  return _internal_add_msgrepeateddata();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TestMessageB_ReqData >&
TestMessageB::msgrepeateddata() const {
  // @@protoc_insertion_point(field_list:TestMessageB.msgrepeatedData)
  return msgrepeateddata_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::TestMessageB_MT> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TestMessageB_MT>() {
  return ::TestMessageB_MT_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_testmsg_2eproto
